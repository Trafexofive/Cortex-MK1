# ==============================================================================
#           TOOL MANIFEST (v1.0 - Sovereign Core Standard)
# ==============================================================================

kind: Tool
version: "1.0"
name: "sentiment_analyzer"
summary: "ML-powered sentiment analysis tool"
author: "PRAETORIAN_CHIMERA"
state: "stable"

description: |
  Analyzes text sentiment using keyword-based approach (simple) or
  transformer models (production). Returns sentiment label 
  (positive/negative/neutral) and confidence score.
  Supports multiple languages and custom model selection.

returns: |
  JSON object with sentiment, confidence, language, and optional scores.
  Example: {"sentiment": "positive", "confidence": 0.95, "language": "en"}

implementation:
  type: "script"
  runtime: "python3"
  entrypoint: "./scripts/sentiment_analyzer.py"
  
  resources:
    memory: "512M"
    cpu: "0.5"
    timeout: 30
  
  build:
    engine: "pip"
    requirements_file: "./requirements.txt"
    cache_dependencies: true
  
  health_check:
    type: "script"
    command: "python3 ./scripts/sentiment_analyzer.py --health-check"
    expected_exit_code: 0
    expected_output_contains: "healthy"

parameters:
  - name: "text"
    type: "string"
    description: "Text to analyze"
    required: true
    validation:
      min_length: 1
      max_length: 10000
  
  - name: "model"
    type: "string"
    description: "Model to use for analysis"
    required: false
    enum: ["default", "multilingual", "financial"]
    default: "default"
  
  - name: "language"
    type: "string"
    description: "Text language (auto-detect if not specified)"
    required: false
    validation:
      pattern: "^[a-z]{2}$"
  
  - name: "return_scores"
    type: "boolean"
    description: "Return all class scores, not just top prediction"
    required: false
    default: false

examples:
  - description: "Basic sentiment analysis"
    input:
      text: "I absolutely love this product! It's amazing!"
    expected_output:
      sentiment: "positive"
      confidence: 0.98
  
  - description: "Negative sentiment"
    input:
      text: "This is the worst experience I've ever had."
    expected_output:
      sentiment: "negative"
      confidence: 0.95
  
  - description: "With all scores"
    input:
      text: "The product is okay, nothing special."
      return_scores: true
    expected_output:
      sentiment: "neutral"
      scores:
        positive: 0.25
        neutral: 0.60
        negative: 0.15

environment:
  variables:
    MODEL_CACHE_DIR: "/app/models"
    TRANSFORMERS_OFFLINE: "0"
    LOG_LEVEL: "INFO"

tags:
  - "nlp"
  - "ml"
  - "sentiment"
  - "analysis"
  - "production"
