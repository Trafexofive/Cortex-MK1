
x-common-labels: &common-labels
  labels:
    project: "GraphRAG-Agent-MK1"
    owner: "Gemini"

x-common-env: &common-env
  env_file:
    - ./.env

services:
  neo4j:
    <<: [*common-labels, *common-env]
    image: neo4j:5.14-community
    container_name: graphrag_neo4j_mk1
    restart: unless-stopped
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_memory_heap_initial__size: 2G
      NEO4J_dbms_memory_heap_max__size: 4G
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - graphrag_network
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --fail http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    <<: [*common-labels, *common-env]
    image: redis:7-alpine
    container_name: graphrag_redis_mk1
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    networks:
      - graphrag_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    <<: [*common-labels, *common-env]
    build:
      context: .
      dockerfile: Dockerfile
    container_name: graphrag_app_mk1
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app/app
      - ./voice:/app/voice
      - ./data:/app/data
    devices:
      - /dev/snd:/dev/snd
    networks:
      - graphrag_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${API_PORT}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api_gateway:
    <<: [*common-labels]
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: graphrag_api_gateway_mk1
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - graphrag_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  graphrag_network:
    driver: bridge
    name: graphrag_network
    <<: *common-labels

volumes:
  neo4j_data:
    name: graphrag_neo4j_data
    <<: *common-labels
  neo4j_logs:
    name: graphrag_neo4j_logs
    <<: *common-labels
  redis_data:
    name: graphrag_redis_data
    <<: *common-labels
