
x-common-labels: &common-labels
  labels:
    project: "cortex-prime"
    owner: "L'bro"

x-common-env: &common-env
  env_file:
    - ./.env

services:
  neo4j:
    <<: [*common-labels, *common-env]
    image: neo4j:5.14-community
    container_name: cortex_prime_neo4j_mk1
    restart: unless-stopped
    ports:
      - "${NEO4J_HTTP_PORT:-7474}:7474"
      - "${NEO4J_BOLT_PORT:-7687}:7687"
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
      NEO4J_PLUGINS: '["apoc"]'
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    networks:
      - cortex_prime_network
    environment:
      NEO4J_AUTH: "${NEO4J_USER}/${NEO4J_PASSWORD}"
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_ARGS: "--verbose"
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider --fail http://localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    <<: [*common-labels, *common-env]
    image: redis:7-alpine
    container_name: cortex_prime_redis_mk1
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6380}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    <<: [*common-labels, *common-env]
    build:
      context: ./core/app
      dockerfile: Dockerfile
    container_name: cortex_prime_app_mk1
    restart: unless-stopped
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./core/app:/app/app
      - ./voice:/app/voice
      - ./data:/app/data
    devices:
      - /dev/snd:/dev/snd
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:${API_PORT}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  api_gateway:
    <<: [*common-labels]
    build:
      context: ./api_gateway
      dockerfile: Dockerfile
    container_name: cortex_prime_api_gateway_mk1
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  chronicle:
    <<: [*common-labels]
    build:
      context: ./core/services/chronicle
      dockerfile: Dockerfile
    container_name: cortex_prime_chronicle_mk1
    restart: unless-stopped
    networks:
      - cortex_prime_network
    volumes:
      - chronicle_data:/app

  agent_factory:
    <<: [*common-labels]
    build:
      context: ./core/services/agent_factory
      dockerfile: Dockerfile
    container_name: cortex_prime_agent_factory_mk1
    restart: unless-stopped
    networks:
      - cortex_prime_network

  tool_factory:
    <<: [*common-labels]
    build:
      context: ./core/services/tool_factory
      dockerfile: Dockerfile
    container_name: cortex_prime_tool_factory_mk1
    restart: unless-stopped
    networks:
      - cortex_prime_network

  chimera_core:
    <<: [*common-labels]
    build:
      context: ./core/chimera_core
      dockerfile: Dockerfile
    container_name: cortex_prime_chimera_core_mk1
    restart: unless-stopped
    networks:
      - cortex_prime_network

networks:
  cortex_prime_network:
    driver: bridge
    name: cortex_prime_network
    <<: *common-labels

volumes:
  neo4j_data:
    name: cortex_prime_neo4j_data
    <<: *common-labels
  neo4j_logs:
    name: cortex_prime_neo4j_logs
    <<: *common-labels
  redis_data:
    name: cortex_prime_redis_data
    <<: *common-labels
  chronicle_data:
    name: cortex_prime_chronicle_data
    <<: *common-labels
