# ==============================================================================
# PROJECT: CORTEX-PRIME - CORE SERVICES ONLY (Minimal Stack)
#
# This compose file contains only the essential services needed for basic
# operation, excluding heavy services like Neo4j. Perfect for development
# and testing the core agent loop.
# ==============================================================================

x-common-labels: &common-labels
  labels:
    project: "${PROJECT_NAME:-cortex-prime}"
    owner: "PRAETORIAN_CHIMERA"
    stack: "core"

x-common-env: &common-env
  env_file:
    - ./env/.env

services:

  # --- REDIS (Lightweight Cache) ---
  redis:
    <<: [*common-labels, *common-env]
    image: redis:7-alpine
    container_name: ${PROJECT_NAME:-cortex-prime-mk1}_redis_core
    restart: unless-stopped
    ports:
      - "${REDIS_HOST_PORT:-6380}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # --- LLM GATEWAY (Essential for Agent Loops) ---
  llm_gateway:
    <<: [*common-labels, *common-env]
    build:
      context: ../services/llm_gateway
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-cortex-prime-mk1}_llm_gateway_core
    restart: unless-stopped
    ports:
      - "${LLM_GATEWAY_HOST_PORT:-8081}:8080"
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- CHAT TEST (Development Interface) ---
  chat_test:
    <<: [*common-labels, *common-env]
    build:
      context: ../services/chat_test
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-cortex-prime-mk1}_chat_test_core
    restart: unless-stopped
    depends_on:
      llm_gateway:
        condition: service_healthy
    ports:
      - "${CHAT_TEST_HOST_PORT:-8888}:8888"
    volumes:
      - ../services/chat_test:/app
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- MANIFEST INGESTION (Manifest Registry) ---
  manifest_ingestion:
    <<: [*common-labels, *common-env]
    build:
      context: ../services/manifest_ingestion
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-cortex-prime-mk1}_manifest_ingestion_core
    restart: unless-stopped
    ports:
      - "${MANIFEST_INGESTION_HOST_PORT:-8082}:8082"
    volumes:
      - ../services/manifest_ingestion:/app
      - ../manifests:/app/manifests:ro
      - manifest_cache:/app/cache
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8082/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- RUNTIME EXECUTOR (Tool/Agent Execution) ---
  runtime_executor:
    <<: [*common-labels, *common-env]
    build:
      context: ../services/runtime_executor
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-cortex-prime-mk1}_runtime_executor_core
    restart: unless-stopped
    depends_on:
      manifest_ingestion:
        condition: service_healthy
      llm_gateway:
        condition: service_healthy
    ports:
      - "${RUNTIME_EXECUTOR_HOST_PORT:-8083}:8083"
    volumes:
      - ../services/runtime_executor:/app
      - ../manifests:/app/manifests:ro
      - execution_cache:/app/cache
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # --- B-LINE DASHBOARD (Modern Web UI) ---
  b_line:
    <<: [*common-labels, *common-env]
    build:
      context: ../services/b-line
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME:-cortex-prime-mk1}_b_line_core
    restart: unless-stopped
    depends_on:
      manifest_ingestion:
        condition: service_healthy
      runtime_executor:
        condition: service_healthy
    ports:
      - "${B_LINE_HOST_PORT:-3000}:3000"
    environment:
      - NEXT_PUBLIC_MANIFEST_URL=http://manifest_ingestion:8082
      - NEXT_PUBLIC_RUNTIME_URL=http://runtime_executor:8083
      - NEXT_PUBLIC_DEPLOYMENT_URL=http://deployment_controller:8084
    networks:
      - cortex_prime_network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

networks:
  cortex_prime_network:
    driver: bridge
    name: ${PROJECT_NAME:-cortex-prime-mk1}_core_network

volumes:
  redis_data:
    name: ${PROJECT_NAME:-cortex-prime-mk1}_redis_core_data
  manifest_cache:
    name: ${PROJECT_NAME:-cortex-prime-mk1}_manifest_cache_core
  execution_cache:
    name: ${PROJECT_NAME:-cortex-prime-mk1}_execution_cache_core
