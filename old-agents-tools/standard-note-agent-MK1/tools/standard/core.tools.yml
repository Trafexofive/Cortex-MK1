# config/tools/core.tools.yml
# Core, foundational tools for general agent use within the Chimera Ecosystem.
# These tools are designed to be robust and reusable.

# --- Script-Based Core Tools ---
SystemInteractionTools:
  BashExecutor:
    name: "bash"
    description: >
      Executes a given shell command using Bash. The command is executed in the agent's
      designated AGENT_WORKSPACE if not an absolute path (though absolute paths are discouraged).
      Output includes both stdout and stderr. USE WITH EXTREME CAUTION.
      Parameters: {"command": "string (REQUIRED, the shell command to execute)"}
    type: "script"
    runtime: "bash"
    # Path relative to this core.tools.yml file (config/tools/)
    path: "./scripts/bash/execute_bash.sh"
    parameters_schema:
      type: "object"
      properties:
        command: { type: "string", description: "The shell command." }
      required: ["command"]
    example_usage:
      command: "ls -la data_files"

  PythonScriptExecutor:
    name: "python_exec"
    description: >
      Executes a specified Python 3 script. The target script is identified by 'script_path'
      (relative to a secure, predefined scripts directory).
      Parameters defined in 'script_params' are passed to the target script as a single JSON string argument.
      The target script should parse this JSON string to access its parameters.
      Output from the script's stdout is returned.
      Parameters: {
        "script_path": "string (REQUIRED, e.g., 'utils/data_converter.py', 'reporting/generate_summary.py')",
        "script_params": "object (OPTIONAL, JSON object of parameters for the target script)"
      }
    type: "script"
    runtime: "python3"
    path: "./scripts/python/generic_python_executor.py" # This is a wrapper script
    parameters_schema:
      type: "object"
      properties:
        script_path: { type: "string", description: "Path of the Python script to execute (relative to allowed base for agent scripts)." }
        script_params: { type: "object", description: "A JSON object of parameters for the target script."}
      required: ["script_path"]
    example_usage:
      script_path: "data_processing/clean_data.py"
      script_params: { "input_file": "raw_data.csv", "output_file": "cleaned_data.csv", "mode": "strict" }

