#!/bin/bash
# ==============================================================================
# CORTEX-CLI Wrapper Script
# ==============================================================================
# Convenience wrapper for the Cortex-CLI Python client.
# Automatically sets up virtual environment and dependencies.
# ==============================================================================

set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
REPO_ROOT="$(cd "$SCRIPT_DIR/.." && pwd)"
VENV_PATH="$REPO_ROOT/venv"
CLI_SCRIPT="$SCRIPT_DIR/cortex-cli"

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Check if venv exists and create if needed
if [ ! -d "$VENV_PATH" ]; then
    echo -e "${YELLOW}Creating virtual environment...${NC}"
    python3 -m venv "$VENV_PATH"
    source "$VENV_PATH/bin/activate"
    pip install -q httpx httpx-sse
    echo -e "${GREEN}âœ“ Virtual environment created${NC}"
else
    source "$VENV_PATH/bin/activate"
fi

# Show usage if no arguments
if [ $# -eq 0 ]; then
    echo -e "${CYAN}Cortex-CLI: Interactive chat with agents from manifests${NC}"
    echo ""
    echo "Usage: $0 --manifest <path-to-agent.yml>"
    echo "       $0 -m <path-to-agent.yml>"
    echo ""
    echo "Examples:"
    echo "  $0 -m std/manifests/agents/assistant/agent.yml"
    echo "  $0 --manifest path/to/my-agent.yml --url http://192.168.1.100"
    echo ""
    exit 0
fi

# Run the CLI with all passed arguments
cd "$REPO_ROOT"
python "$CLI_SCRIPT" "$@"
